function C(s){const r=[],i=[];if((!s.name||s.name.trim().length===0)&&r.push("Deck name is required"),s.name&&s.name.length>50&&i.push("Deck name is quite long, consider shortening it"),!s.baseCards||!Array.isArray(s.baseCards))return r.push("Deck must have a baseCards array"),{isValid:!1,errors:r,warnings:i};const t=s.baseCards.reduce((n,e)=>n+(e.count||0),0);t<8&&r.push("Deck must have at least 8 total cards for gameplay"),t>100&&i.push(`Deck has ${t} cards, which may impact performance`);const u=s.zoneTypes?s.zoneTypes.map(n=>n.id):[];s.baseCards.forEach((n,e)=>{const h=y(n,e,u);r.push(...h.errors),i.push(...h.warnings)}),s.theme?(c(s.theme.primaryColor)||r.push("Invalid primary color format"),c(s.theme.secondaryColor)||r.push("Invalid secondary color format")):i.push("No theme specified, will use default colors");const a=s.baseCards.map(n=>n.id).filter(Boolean),o=a.filter((n,e)=>a.indexOf(n)!==e);return o.length>0&&r.push(`Duplicate card IDs found: ${o.join(", ")}`),{isValid:r.length===0,errors:r,warnings:i}}function y(s,r,i){const t=[],u=[],a=r!==void 0?`Card ${r+1}`:"Card";return(!s.id||s.id.trim().length===0)&&t.push(`${a}: Card ID is required`),!s.cells||!Array.isArray(s.cells)?(t.push(`${a}: Card must have a cells array`),{isValid:!1,errors:t,warnings:u}):(s.cells.length!==2?t.push(`${a}: Card must have exactly 2 rows`):s.cells.forEach((o,n)=>{!Array.isArray(o)||o.length!==2?t.push(`${a}: Row ${n+1} must have exactly 2 cells`):o.forEach((e,h)=>{e.type?i&&i.length>0&&!i.includes(e.type)&&t.push(`${a}: Cell (${n+1},${h+1}) has invalid type "${e.type}". Valid types: ${i.join(", ")}`):t.push(`${a}: Cell (${n+1},${h+1}) is missing type`),e.roads&&e.roads.forEach((f,m)=>{if(!Array.isArray(f)||f.length!==2)t.push(`${a}: Road ${m+1} in cell (${n+1},${h+1}) must be [start, end] array`);else{const[l,p]=f;(typeof l!="number"||typeof p!="number"||l<0||l>3||p<0||p>3)&&t.push(`${a}: Road segment values must be 0-3 (representing N,E,S,W)`)}})})}),(!s.count||s.count<1)&&t.push(`${a}: Card count must be at least 1`),s.count>20&&u.push(`${a}: High card count (${s.count}) may create unbalanced gameplay`),{isValid:t.length===0,errors:t,warnings:u})}function c(s){return s?!!/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(s):!1}function d(s,r){const i=s.reduce((a,o)=>a+o.count,0),t={};r&&r.forEach(a=>{t[a]=0});let u=0;return s.forEach(a=>{const o=a.count;a.cells.forEach(n=>{n.forEach(e=>{e.type&&(t[e.type]=(t[e.type]||0)+o),e.roads&&e.roads.length>0&&(u+=e.roads.length*o)})})}),{totalCards:i,cellTypeCounts:t,roadCounts:u}}export{d as g,C as v};
